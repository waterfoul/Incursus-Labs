IntraACL patch for MediaWiki 1.14.1

OUTDATED

http://wiki4.intra.net/IntraACL
http://www.mediawiki.org/

diff -r 98a60024775f includes/CategoryPage.php
--- includes/CategoryPage.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/CategoryPage.php	Mon Feb 28 19:46:36 2011 +0300
@@ -145,6 +145,11 @@
 	 * @deprecated kept for compatibility, please use addSubcategoryObject instead
 	 */
 	function addSubcategory( $title, $sortkey, $pageLength ) {
+/*patch|2009-06-19|IntraACL|start*/
+		if (!$title->userCanReadEx()) {
+			return;
+		}
+/*patch|2009-06-19|IntraACL|end*/  
 		global $wgContLang;
 		// Subcategory; strip the 'Category' namespace from the link text.
 		$this->children[] = $this->getSkin()->makeKnownLinkObj(
@@ -191,6 +196,12 @@
 	 * Add a miscellaneous page
 	 */
 	function addPage( $title, $sortkey, $pageLength, $isRedirect = false ) {
+/*patch|2009-06-19|IntraACL|start*/
+		if (!$title->userCanReadEx()) {
+			return;
+		}
+/*patch|2009-06-19|IntraACL|end*/  
+		
 		global $wgContLang;
 		$this->articles[] = $isRedirect
 			? '<span class="redirect-in-category">' . $this->getSkin()->makeKnownLinkObj( $title ) . '</span>'
diff -r 98a60024775f includes/ChangesFeed.php
--- includes/ChangesFeed.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/ChangesFeed.php	Mon Feb 28 19:46:36 2011 +0300
@@ -21,13 +21,15 @@
 	public function execute( $feed, $rows, $limit = 0 , $hideminor = false, $lastmod = false ) {
 		global $messageMemc, $wgFeedCacheTimeout;
 		global $wgFeedClasses, $wgSitename, $wgContLanguageCode;
+		global $wgUser;
 
 		if ( !FeedUtils::checkFeedOutput( $this->format ) ) {
 			return;
 		}
 
-		$timekey = wfMemcKey( $this->type, $this->format, 'timestamp' );
-		$key = wfMemcKey( $this->type, $this->format, 'limit', $limit, 'minor', $hideminor );
+		$userid = $wgUser->getId();
+		$timekey = wfMemcKey( $this->type, $this->format, $userid, 'timestamp' );
+		$key = wfMemcKey( $this->type, $this->format, $userid, 'limit', $limit, 'minor', $hideminor );
 
 		FeedUtils::checkPurge($timekey, $key);
 
@@ -112,6 +114,10 @@
 
 		foreach( $sorted as $obj ) {
 			$title = Title::makeTitle( $obj->rc_namespace, $obj->rc_title );
+/*patch|2010-04-27|IntraACL|start*/
+			if( !$title || method_exists( $title, 'userCanReadEx' ) && !$title->userCanReadEx() )
+				continue;
+/*patch|2009-04-27|IntraACL|end*/
 			$talkpage = $title->getTalkPage();
 			$item = new FeedItem(
 				$title->getPrefixedText(),
diff -r 98a60024775f includes/FeedUtils.php
--- includes/FeedUtils.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/FeedUtils.php	Mon Feb 28 19:46:36 2011 +0300
@@ -65,11 +65,8 @@
 					$actiontext,
 					$skin->formatComment( $comment ) ) ) ) . "</p>\n";
 
-		//NOTE: Check permissions for anonymous users, not current user.
-		//      No "privileged" version should end up in the cache.
-		//      Most feed readers will not log in anway.
-		$anon = new User();
-		$accErrors = $title->getUserPermissionsErrors( 'read', $anon, true );
+		// NOTE: Check permissions for current user. -- IntraACL
+		$accErrors = $title->getUserPermissionsErrors( 'read', $wgUser, true );
 
 		if( $title->getNamespace() >= 0 && !$accErrors ) {
 			if( $oldid ) {
diff -r 98a60024775f includes/LogEventsList.php
--- includes/LogEventsList.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/LogEventsList.php	Mon Feb 28 19:46:36 2011 +0300
@@ -230,6 +230,12 @@
 		global $wgLang, $wgUser, $wgContLang;
 
 		$title = Title::makeTitle( $row->log_namespace, $row->log_title );
+/*patch|2009-06-19|IntraACL|start*/
+		if (!$title->userCanReadEx()) {
+			return '';
+		}
+/*patch|2009-06-19|IntraACL|end*/  
+		
 		$time = $wgLang->timeanddate( wfTimestamp(TS_MW, $row->log_timestamp), true );
 		// User links
 		if( self::isDeleted($row,LogPage::DELETED_USER) ) {
diff -r 98a60024775f includes/QueryPage.php
--- includes/QueryPage.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/QueryPage.php	Mon Feb 28 19:46:36 2011 +0300
@@ -399,6 +399,13 @@
 			# $res might contain the whole 1,000 rows, so we read up to
 			# $num [should update this to use a Pager]
 			for( $i = 0; $i < $num && $row = $dbr->fetchObject( $res ); $i++ ) {
+/*patch|2009-06-19|IntraACL|start*/
+				$title = Title::makeTitleSafe( $row->namespace, $row->title );
+				if (!$title->userCanReadEx()) {
+					continue;
+				}
+/*patch|2009-06-19|IntraACL|end*/  
+				
 				$line = $this->formatResult( $skin, $row );
 				if( $line ) {
 					$attr = ( isset( $row->usepatrol ) && $row->usepatrol && $row->patrolled == 0 )
diff -r 98a60024775f includes/Title.php
--- includes/Title.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/Title.php	Mon Feb 28 19:46:36 2011 +0300
@@ -89,7 +89,11 @@
 		$t = new Title();
 		$t->mDbkeyform = $key;
 		if( $t->secureAndSplit() )
-			return $t;
+/*patch|2009-06-19|IntraACL|start*/
+			return $t->checkAccessControl();
+/*patch|2009-06-19|IntraACL|end*/  
+//Replaced by patch		return $t;
+		
 		else
 			return NULL;
 	}
@@ -143,7 +147,10 @@
 				$cachedcount++;
 				Title::$titleCache[$text] =& $t;
 			}
-			return $t;
+/*patch|2009-06-19|IntraACL|start*/
+			return $t->checkAccessControl();
+/*patch|2009-06-19|IntraACL|end*/  
+// Preplaced by patch			return $t;
 		} else {
 			$ret = NULL;
 			return $ret;
@@ -169,7 +176,10 @@
 
 		$t->mDbkeyform = str_replace( ' ', '_', $url );
 		if( $t->secureAndSplit() ) {
-			return $t;
+/*patch|2009-06-19|IntraACL|start*/
+			return $t->checkAccessControl();
+/*patch|2009-06-19|IntraACL|end*/  
+// Preplaced by patch			return $t;
 		} else {
 			return NULL;
 		}
@@ -255,7 +265,11 @@
 		$t->mArticleID = ( $ns >= 0 ) ? -1 : 0;
 		$t->mUrlform = wfUrlencode( $t->mDbkeyform );
 		$t->mTextform = str_replace( '_', ' ', $title );
+/*patch|2009-06-19|IntraACL|start*/
+		$t = $t->checkAccessControl();
 		return $t;
+/*patch|2009-06-19|IntraACL|end*/  
+// Preplaced by patch		return $t;
 	}
 
 	/**
@@ -272,7 +286,10 @@
 		$t = new Title();
 		$t->mDbkeyform = Title::makeName( $ns, $title, $fragment );
 		if( $t->secureAndSplit() ) {
-			return $t;
+/*patch|2009-06-19|IntraACL|start*/
+			return $t->checkAccessControl();
+/*patch|2009-06-19|IntraACL|end*/  
+// Preplaced by patch			return $t;
 		} else {
 			return NULL;
 		}
@@ -3396,4 +3413,104 @@
 		}
 		return $redirs;
 	}
+
+/*patch|2009-06-19|IntraACL|start*/
+	
+	/**
+	 * This function is called from the patches for IntraACL for secure listings 
+	 * (e.g. Spcecial:AllPages). It checks, whether the current user is allowed
+	 * to read the article for this title object. For normal pages this is 
+	 * evaluate in the method <userCanRead>. 
+	 * However, the special pages that generate listings, often create title 
+	 * objects before the can check their accessibility. The fallback mechanism
+	 * of IntraACL creates the title "Permission denied" for the article that 
+	 * must not be accessed. The listings would then show a link to "Permission
+	 * denied". So this function returns "false" for the title "Permission denied"
+	 * as well. 
+	 *
+	 * @return 
+	 * 		true, if this title can be read
+	 * 		false, if the title is protected or "Permission denied".
+	 */
+	public function userCanReadEx() {
+		if (!defined('HACL_HALOACL_VERSION')) {
+			// IntraACL is disabled
+			return true;
+		}
+		global $haclgContLang;
+		return $this->mTextform !== $haclgContLang->getPermissionDeniedPage() 
+		       && $this->userCanRead();
+	}
+	
+	/**
+	 * This function checks, if this title is accessible for the action of the
+	 * current request. If the action is unknown it is assumed to be "read".
+	 * If the title is not accessible, the new title "Permission denied" is 
+	 * returned. This is a fallback to protect titles if all other security 
+	 * patches fail.
+	 * 
+	 * While a page is rendered, the same title is often checked several times. 
+	 * To speed things up, the results of an accessibility check are internally
+	 * cached.  
+	 * 
+	 * This function can be disabled in HACL_Initialize.php or LocalSettings.php
+	 * by setting the variable $haclgEnableTitleCheck = false.
+	 *
+	 * @return 
+	 * 		$this, if access is granted on this title or
+	 * 		the title for "Permission denied" if not.
+	 */
+	private function checkAccessControl() {
+		if (!defined('HACL_HALOACL_VERSION')) {
+			// IntraACL is disabled or not fully initialized
+			return $this;
+		}
+		global $haclgEnableTitleCheck;
+		if (isset($haclgEnableTitleCheck) && $haclgEnableTitleCheck === false) {
+			return $this;
+		}
+		static $permissionCache = array();
+		
+		global $wgRequest;
+		$action = $wgRequest->getVal( 'action', 'read');
+		$currentTitle = $wgRequest->getVal('title');
+		$currentTitle = str_replace( '_', ' ', $currentTitle);
+		if ($this->getFullText() != $currentTitle) {
+			$action = 'read';
+		}
+		$index = $this->getFullText().'-'.$action; // A bug was fixed here thanks to Dave MacDonald
+		$allowed = @$permissionCache[$index];
+		if (!isset($allowed)) {
+			switch ($action) {
+				case 'create':
+					$allowed = $this->userCanCreate();
+					break;
+				case 'edit':
+					$allowed = $this->userCanEdit();
+					break;
+				case 'move':
+					$allowed = $this->userCanMove();
+					break;
+				case 'annotate':
+					$allowed = $this->userCan($action);
+					break;
+				default:
+					$allowed = $this->userCanRead();
+			}
+			$permissionCache[$index] = $allowed;
+		}
+		if ($allowed === false) {
+//			echo "no\n";
+			global $haclgContLang;
+			$etc = $haclgEnableTitleCheck;
+			$haclgEnableTitleCheck = false;
+			$t = Title::newFromURL($haclgContLang->getPermissionDeniedPage());
+			$haclgEnableTitleCheck = $etc;
+			return $t;
+		}
+//		echo "yes\n";
+		return $this;
+	}
+/*patch|2009-06-19|IntraACL|end*/  
+
 }
diff -r 98a60024775f includes/User.php
--- includes/User.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/User.php	Mon Feb 28 19:46:36 2011 +0300
@@ -491,6 +491,11 @@
 	static function isValidUserName( $name ) {
 		global $wgContLang, $wgMaxNameChars;
 
+		# Disable IntraACL title check as the main and/or
+		# user namespaces may be protected
+		if ( defined( 'HACL_HALOACL_VERSION' ) )
+			$hacl = haclfDisableTitlePatch();
+
 		if ( $name == ''
 		|| User::isIP( $name )
 		|| strpos( $name, '/' ) !== false
@@ -498,6 +503,8 @@
 		|| $name != $wgContLang->ucfirst( $name ) ) {
 			wfDebugLog( 'username', __METHOD__ .
 				": '$name' invalid due to empty, IP, slash, length, or lowercase" );
+			if ( defined( 'HACL_HALOACL_VERSION' ) )
+				haclfRestoreTitlePatch($hacl);
 			return false;
 		}
 
@@ -509,6 +516,8 @@
 			|| strcmp( $name, $parsed->getPrefixedText() ) ) {
 			wfDebugLog( 'username', __METHOD__ .
 				": '$name' invalid due to ambiguous prefixes" );
+			if ( defined( 'HACL_HALOACL_VERSION' ) )
+				haclfRestoreTitlePatch($hacl);
 			return false;
 		}
 
@@ -525,9 +534,13 @@
 		if( preg_match( $unicodeBlacklist, $name ) ) {
 			wfDebugLog( 'username', __METHOD__ .
 				": '$name' invalid due to blacklisted characters" );
+			if ( defined( 'HACL_HALOACL_VERSION' ) )
+				haclfRestoreTitlePatch($hacl);
 			return false;
 		}
 
+		if ( defined( 'HACL_HALOACL_VERSION' ) )
+			haclfRestoreTitlePatch($hacl);
 		return true;
 	}
 
@@ -640,6 +653,11 @@
 	 *                - 'creatable'  Valid for batch processes, login and account creation
 	 */
 	static function getCanonicalName( $name, $validate = 'valid' ) {
+		# Disable IntraACL title check as the main and/or
+		# user namespaces may be protected
+		if ( defined( 'HACL_HALOACL_VERSION' ) )
+			$hacl = haclfDisableTitlePatch();
+
 		# Force usernames to capital
 		global $wgContLang;
 		$name = $wgContLang->ucfirst( $name );
@@ -655,6 +673,8 @@
 			Title::newFromText( $name ) : Title::makeTitle( NS_USER, $name );
 		# Check for invalid titles
 		if( is_null( $t ) ) {
+			if ( defined( 'HACL_HALOACL_VERSION' ) )
+				haclfRestoreTitlePatch($hacl);
 			return false;
 		}
 
@@ -684,6 +704,8 @@
 			default:
 				throw new MWException( 'Invalid parameter value for $validate in '.__METHOD__ );
 		}
+		if ( defined( 'HACL_HALOACL_VERSION' ) )
+			haclfRestoreTitlePatch($hacl);
 		return $name;
 	}
 
diff -r 98a60024775f includes/parser/Parser.php
--- includes/parser/Parser.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/parser/Parser.php	Mon Feb 28 19:46:36 2011 +0300
@@ -2930,6 +2930,19 @@
 				$ns = $this->mTitle->getNamespace();
 			}
 			$title = Title::newFromText( $part1, $ns );
+/*patch|2010-09-31|IntraACL|start*/
+			if ( method_exists( $title, 'userCanReadEx' ) && !$title->userCanReadEx() ) {
+				global $haclgInclusionDeniedMessage;
+				$title = NULL;
+				if ( $haclgInclusionDeniedMessage ) {
+					$found = true;
+					$text = wfMsg( $haclgInclusionDeniedMessage );
+				} elseif ( $haclgInclusionDeniedMessage === '' ) {
+					$found = true;
+					$text = '';
+				}
+			}
+/*patch|2010-09-31|IntraACL|end*/
 			if ( $title ) {
 				$titleText = $title->getPrefixedText();
 				# Check for language variants if the template is not found
diff -r 98a60024775f includes/specials/SpecialAllpages.php
--- includes/specials/SpecialAllpages.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/specials/SpecialAllpages.php	Mon Feb 28 19:46:36 2011 +0300
@@ -303,6 +303,11 @@
 
 				while( ( $n < $this->maxPerPage ) && ( $s = $res->fetchObject() ) ) {
 					$t = Title::makeTitle( $s->page_namespace, $s->page_title );
+/*patch|2009-06-19|IntraACL|start*/
+				if ($t && !$t->userCanReadEx()) {
+					continue;
+				}
+/*patch|2009-06-19|IntraACL|end*/
 					if( $t ) {
 						$link = ( $s->page_is_redirect ? '<div class="allpagesredirect">' : '' ) .
 							$sk->makeKnownLinkObj( $t, htmlspecialchars( $t->getText() ), false, false ) .
diff -r 98a60024775f includes/specials/SpecialExport.php
--- includes/specials/SpecialExport.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/specials/SpecialExport.php	Mon Feb 28 19:46:36 2011 +0300
@@ -42,7 +42,10 @@
 			$n = $ns . ':' . $n;
 		}
 
-		$pages[] = $n;
+/*patch|2011-02-28|IntraACL|start*/
+		if (Title::makeTitleSafe($row->page_namespace, $row->page_title)->userCanReadEx())
+			$pages[] = $n;
+/*patch|2011-02-28|IntraACL|end*/
 	}
 	$dbr->freeResult($res);
 
@@ -97,7 +100,10 @@
 				__METHOD__ );
 			foreach( $result as $row ) {
 				$template = Title::makeTitle( $row->namespace, $row->title );
-				$pageSet[$template->getPrefixedText()] = true;
+/*patch|2011-02-28|IntraACL|start*/
+				if ($template->userCanReadEx())
+					$pageSet[$template->getPrefixedText()] = true;
+/*patch|2011-02-28|IntraACL|end*/
 			}
 		}
 	}
diff -r 98a60024775f includes/specials/SpecialListredirects.php
--- includes/specials/SpecialListredirects.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/specials/SpecialListredirects.php	Mon Feb 28 19:46:36 2011 +0300
@@ -39,6 +39,12 @@
 		if( $revision ) {
 			# Make a link to the destination page
 			$target = Title::newFromRedirect( $revision->getText() );
+/*patch|2009-06-19|IntraACL|start*/
+			if (!$target->userCanReadEx()) {
+				return;
+			}
+/*patch|2009-06-19|IntraACL|end*/
+			
 			if( $target ) {
 				$arr = $wgContLang->getArrow() . $wgContLang->getDirMark();
 				$targetLink = $skin->makeLinkObj( $target );
diff -r 98a60024775f includes/specials/SpecialNewpages.php
--- includes/specials/SpecialNewpages.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/specials/SpecialNewpages.php	Mon Feb 28 19:46:36 2011 +0300
@@ -238,6 +238,12 @@
 		$dm = $wgContLang->getDirMark();
 
 		$title = Title::makeTitleSafe( $result->rc_namespace, $result->rc_title );
+/*patch|2009-06-19|IntraACL|start*/
+		if (!$title->userCanReadEx()) {
+			return;
+		}
+/*patch|2009-06-19|IntraACL|end*/
+
 		$time = $wgLang->timeAndDate( $result->rc_timestamp, true );
 		$plink = $this->skin->makeKnownLinkObj( $title, '', $this->patrollable( $result ) ? 'rcid=' . $result->rc_id : '' );
 		$hist = $this->skin->makeKnownLinkObj( $title, wfMsgHtml( 'hist' ), 'action=history' );
diff -r 98a60024775f includes/specials/SpecialPrefixindex.php
--- includes/specials/SpecialPrefixindex.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/specials/SpecialPrefixindex.php	Mon Feb 28 19:46:36 2011 +0300
@@ -138,6 +138,11 @@
 	
 				while( ( $n < $this->maxPerPage ) && ( $s = $res->fetchObject() ) ) {
 					$t = Title::makeTitle( $s->page_namespace, $s->page_title );
+/*patch|2009-06-19|IntraACL|start*/
+					if ($t && !$t->userCanReadEx()) {
+						continue;
+					}
+/*patch|2009-06-19|IntraACL|end*/
 					if( $t ) {
 						$link = ($s->page_is_redirect ? '<div class="allpagesredirect">' : '' ) .
 							$sk->makeKnownLinkObj( $t, htmlspecialchars( $t->getText() ), false, false ) .
diff -r 98a60024775f includes/specials/SpecialRandompage.php
--- includes/specials/SpecialRandompage.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/specials/SpecialRandompage.php	Mon Feb 28 19:46:36 2011 +0300
@@ -45,6 +45,12 @@
 			$this->setHeaders();
 			$wgOut->addWikiMsg( strtolower( $this->mName ) . '-nopages',  $wgContLang->getNsText( $this->namespace ) );
 			return;
+		} elseif ( method_exists( $title, 'userCanReadEx' ) && !$title->userCanReadEx() ) {
+/*patch|2011-02-28|IntraACL|start*/
+			$article = new Article( $title );
+			$article->view();
+			return;
+/*patch|2011-02-28|IntraACL|end*/
 		}
 
 		$query = $this->isRedirect() ? 'redirect=no' : '';
diff -r 98a60024775f includes/specials/SpecialRecentchanges.php
--- includes/specials/SpecialRecentchanges.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/specials/SpecialRecentchanges.php	Mon Feb 28 19:46:36 2011 +0300
@@ -348,6 +348,13 @@
 
 		$s = $list->beginRecentChangesList();
 		foreach( $rows as $obj ) {
+/*patch|2009-06-19|IntraACL|start*/
+			$rc = RecentChange::newFromRow( $obj );
+			if (!$rc->getTitle()->userCanReadEx()) {
+				continue;
+			}
+/*patch|2009-06-19|IntraACL|end*/
+
 			if( $limit == 0 ) break;
 			$rc = RecentChange::newFromRow( $obj );
 			$rc->counter = $counter++;
diff -r 98a60024775f includes/specials/SpecialSearch.php
--- includes/specials/SpecialSearch.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/specials/SpecialSearch.php	Mon Feb 28 19:46:36 2011 +0300
@@ -1145,7 +1145,14 @@
 		$out .= "<ul class='mw-search-results'>\n";
 
 		while( $result = $matches->next() ) {
+/*patch|2009-06-19|IntraACL|start*/
+			if (($result->getTitle() != NULL)
+			    && ($result->getTitle()->userCanReadEx())) {
+/*patch|2009-06-19|IntraACL|end*/
 			$out .= $this->showHit( $result, $terms );
+/*patch|2009-06-19|IntraACL|start*/
+			}
+/*patch|2009-06-19|IntraACL|end*/
 		}
 		$out .= "</ul>\n";
 
diff -r 98a60024775f includes/specials/SpecialWatchlist.php
--- includes/specials/SpecialWatchlist.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/specials/SpecialWatchlist.php	Mon Feb 28 19:46:36 2011 +0300
@@ -328,6 +328,12 @@
 	while ( $obj = $dbr->fetchObject( $res ) ) {
 		# Make RC entry
 		$rc = RecentChange::newFromRow( $obj );
+/*patch|2009-06-19|IntraACL|start*/
+		if (!$rc->getTitle()->userCanReadEx()) {
+			continue;
+		}
+/*patch|2009-06-19|IntraACL|end*/
+		
 		$rc->counter = $counter++;
 
 		if ( $wgShowUpdatedMarker ) {
diff -r 98a60024775f includes/specials/SpecialWhatlinkshere.php
--- includes/specials/SpecialWhatlinkshere.php	Fri Jan 14 18:06:06 2011 +0300
+++ includes/specials/SpecialWhatlinkshere.php	Mon Feb 28 19:46:36 2011 +0300
@@ -238,6 +238,11 @@
 		$wgOut->addHTML( $this->listStart() );
 		foreach ( $rows as $row ) {
 			$nt = Title::makeTitle( $row->page_namespace, $row->page_title );
+/*patch|2009-06-19|IntraACL|start*/
+			if (!$nt->userCanReadEx()) {
+				continue;
+			}
+/*patch|2009-06-19|IntraACL|end*/
 
 			if ( $row->page_is_redirect && $level < 2 ) {
 				$wgOut->addHTML( $this->listItem( $row, $nt, true ) );
